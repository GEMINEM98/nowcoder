/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
class Solution {
public:
    //  方法一：双指针遍历（前后指针）
    ListNode* FindKthToTail(ListNode* pListHead, unsigned int k)
    {
        ListNode* front = pListHead;
        ListNode* back = pListHead;
        
        for(int i=0;i<k;++i)
        {
            if(front==NULL)
            {
                return NULL;
            }
            front=front->next;
        }
        while(front!=NULL)
        {
            front=front->next;
            back=back->next;
        }
        return back;
    }
    
    /*//  方法二：
    ListNode* FindKthToTail(ListNode* pListHead, unsigned int k) 
    {
        ListNode* cur=pListHead;
        ListNode* cur1=pListHead;
        size_t count=0;
        while(cur!=NULL)
        {
            ++count;
            cur=cur->next;
        }
        if(count<k)
        {
            return NULL;
        }
        count=count-k;
        while(count--)
        {
            cur1=cur1->next;
        }
        return cur1;
    }
};
