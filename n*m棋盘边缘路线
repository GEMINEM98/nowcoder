
//计算n x m的棋盘格子（n为横向的格子数，m为竖向的格子数）沿着各自边缘线从左上角走到右下角，总共有多少种走法，要求不能走回头路，
//即：只能往右和往下走，不能往左和往上走。

//https://www.nowcoder.com/practice/e2a22f0305eb4f2f9846e7d644dba09b?tpId=37&&tqId=21314&rp=1&ru=

#include<iostream>
using namespace std;

int Lattice(int n,int m)
{
    if(n==1||m==1)
        return n+m;
    return Lattice(n-1,m)+Lattice(n,m-1);
}

int main()
{
    int n=0;
    int m=0;
    while(cin >> n)
    {
        cin >> m;
        cout << Lattice(n,m) << endl;
    }
    return 0;
}
