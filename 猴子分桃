
/*
思路：

设桃子的总数是x
n=1，剩余桃子总数sum1=(4/5)*x-(4/5)= (4/5)*(x-1)
n=2，剩余桃子总数sum2=(4/5)*(sum1-1)=(4/5)*((4/5)*(x-1)-1)
n=3，剩余桃子总数sum3=(4/5)*((4/5)*(sum2-1)-1)=(4/5)*((4/5)*(((4/5)*((4/5)*(x-1)-1))-1)-1)
...
n=n，剩余桃子总数sum=((4/5)^n)*(x+4)-4 (已化简)
当x+4=5^n时，即x=5^n-4时，保证x是整数。x是最少需要的桃子总数，得：
sum=pow(5,n)-4

-------------------------------------------------------------------------------------------
老猴子得到的桃子数：

n个小猴子给了n个
+
最后剩余的所有，即：当n=n时的剩余桃子数
代入x的值，得：
get=n+pow(4,n)-4



*/


// write your code here cpp

#include<iostream>
#include<cmath>
using namespace std;

int main()
{
    long long n=0;
    long long sum=0;
    long long get=0;
    while(cin >> n)
    {
        sum=0;
        get=0;
        if(n==0)
            break;
        else
        {
            sum=pow(5,n)-4;
            get=n+pow(4,n)-4;
            cout << sum << ' ' << get << endl;
        }
    }
    return 0;
}
