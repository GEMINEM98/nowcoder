
//输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
//例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
//则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.

//https://www.nowcoder.com/practice/9b4c81a02cd34f76be2659fa0d54342a?tpId=13&tqId=11172&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking

//注意约束条件和边界条件！

class Solution {
public:
    vector<int> printMatrix(vector<vector<int> > matrix)
    {
        int row=matrix.size();
        int col=matrix[0].size();
        vector<int> v;
        int i=0,j=0;
        int r=row;
        int c=col;
        int count=0;
        while(count!=row*col)
        {
            for(;j<c;++j)
            {
                v.push_back(matrix[i][j]);
                ++count;
            }
            if(count==row*col)
                break;
            for(--j,++i;i<r;++i)
            {
                v.push_back(matrix[i][j]);
                ++count;
            }
            if(count==row*col)
                break;
            for(--i,--j;j>=col-c;--j)
            {
                v.push_back(matrix[i][j]);
                ++count;
            }
            if(count==row*col)
                break;
            for(++j,--i;i>row-r;--i)
            {
                v.push_back(matrix[i][j]);
                ++count;
            }
            ++i;
            ++j;
            c-=1;
            r-=1;
        }
        return v;
    }
};
