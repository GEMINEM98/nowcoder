
/*
思路：
先找出规律：
n=1       0
n=2  (1,1)   1
n=3  ((1,1) 1)  1
n=4  (2,2) (1,1)   2
n=5  ((2,2) 1) (1,1)  2
n=6  ((2,2) 2) (1,1)     2 
n=7  ((3,3) 1) ((1,1) 1)    2
n=8  ((3,3) 2) ((1,1) 1)/(1,1) 2
...
当n % 3 == 0时， n = n / 3;
当n % 3 != 0时， n = n / 3 + 1;

每次分配后，都需要计数，相当一称了一次

*/


// write your code here cpp
#include<iostream>
using namespace std;

int judge(int n)
{
    int count = 0;
    while(n >= 2)
    {
        if(n % 3 == 0)
            n = n / 3;
        else
            n = n / 3 + 1;
        ++count;
    }
    return count;
}

int main()
{
    int n=0;
    while(cin >> n)
    {
        if(n == 0)
            break;
        cout << judge(n) << endl;
    }
    return 0;
}
