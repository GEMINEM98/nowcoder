
//Fibonacci数列就形如：0, 1, 1, 2, 3, 5, 8, 13, ...，
//在Fibonacci数列中的数我们称为Fibonacci数。给你一个N，你想让其变为一个Fibonacci数，
//每一步你可以把当前数字X变为X-1或者X+1，现在给你一个数N求最少需要多少步可以变为Fibonacci数。

#include<iostream>
#define MAX 1024
using namespace std;

int main()
{
    int N=0;
    cin >> N;
    int fib[MAX]={0};
    fib[1]=1;
    for(int i=2;i<MAX;++i)
    {
        fib[i]=fib[i-2]+fib[i-1];
        if((fib[i-1]<=N)&&(fib[i]>=N))
        {
            int left=N-fib[i-1];
            int right=fib[i]-N;
            cout << ((left<right)?left:right) << endl;
            break;
        }
    }
    return 0;
}
